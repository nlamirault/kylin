stages:
  - test
  - coverage
  - deploy

.job_template: &dependencies_py2 |
  ls -alFrt
  pip install -r requirements.txt
  pip install -r requirements-dev.txt

.job_template: &dependencies_py3 |
  ls -alFrt
  pip3 install -r requirements.txt
  pip3 install -r requirements-dev.txt

test:python2.7:
  image: python:2.7
  stage: test
  script:
    - *dependencies_py2
    - tox -epy27

test:python3.4:
  image: python:3.9
  stage: test
  script:
    - *dependencies_py3
    - tox -epy34

test:python3.5:
  image: python:3.9
  stage: test
  script:
    - *dependencies_py3
    - tox -epy35

test:python3.6:
  image: python:3.9
  stage: test
  script:
    - *dependencies_py3
    - tox -epy36

test:flake8:
  image: python:3.9
  stage: test
  script:
    - *dependencies_py3
    - tox -epep8

coverage:python:
  image: python:3.9
  stage: coverage
  script:
    - *dependencies_py3
    - tox -ecoverage
  artifacts:
    paths:
      - htmlcov/
  when: always

deploy:pypi-test:
  stage: deploy
  image: python:3.9
  script:
    - pip install virtualenv
    - virtualenv venv
    - make init pkg-install pkg-dist
    - source venv/bin/activate && twine upload --skip-existing --config-file .pypirc -r test -u $PYPI_USER -p $PYPI_PASSWORD dist/*

deploy:pypi:
  stage: deploy
  image: python:3.9
  script:
    - pip install virtualenv
    - virtualenv venv
    - make init pkg-install pkg-dist
    - source venv/bin/activate && twine upload --config-file .pypirc -u $PYPI_USER -p $PYPI_PASSWORD dist/*
  environment:
    name: PyPI
    url: https://pypi.python.org/pypi/kylin
  only:
    - tags
